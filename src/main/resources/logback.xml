<?xml version="1.0" encoding="UTF-8"?>
<!--
    设置属性 scan =true 配置文件发生改变时, 自动重新加载
    scanPeriod 但设置 scan = true 时该属性才会生效
    表示 60 秒刷新一次配置文件, 可以用的单位有 秒 毫秒 时
-->
<configuration scan="true" scanPeriod="60 seconds">
    <!--
        配置标准输出,直接输出到控制台
        [%thread] 当前进程
        %-5level  格式化字符串对齐
        %logger - %msg%n  开始输出日志并换行
    -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg %n
            </pattern>
        </encoder>
    </appender>
    <!--&lt;!&ndash;-->
        <!--配置日志文件输出的位置-->
    <!--&ndash;&gt;-->
    <!--<appender name="permission" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash;配置日志文件在 tomcat 下的路径, 项目在启动的时,会将 catalina 的目录加载到程序中,这里会自动映射到目录&ndash;&gt;-->
        <!--<file>${catalina.home}/logs/permission.log</file>-->
        <!--&lt;!&ndash;指定压缩文件的规则, 该规则是按时间来压缩日志文件&ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash;指定日志文件压缩后的名称&ndash;&gt;-->
            <!--<FileNamePattern>-->
                <!--${catalina.home}/logs/permission.%d{yyyy-MM-dd}.log.gz-->
            <!--</FileNamePattern>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash;配置日志输出的样式&ndash;&gt;-->
        <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
            <!--<pattern>-->
                <!--%d{yyyy-MM-dd HH:mm:ss.SSS %[thread] %-5level %logger - %msg%n}-->
            <!--</pattern>-->
        <!--</layout>-->
    <!--</appender>-->
    <!--&lt;!&ndash;指定输出到文件&ndash;&gt;-->
    <!--<logger name="xxx" level="INFO">-->
        <!--&lt;!&ndash;使用上面定义的格式输出到文件&ndash;&gt;-->
        <!--<appender-ref ref="permission"/>-->
    <!--</logger>-->

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>